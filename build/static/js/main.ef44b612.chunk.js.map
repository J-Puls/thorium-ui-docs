{"version":3,"sources":["assets/logos.svg","assets/images/parrot2.webp","assets/images/parrot1.webp","components/common/hCodeBlock.js","components/common/sampleCodeDropdown.js","components/diagrams/dropdownDiagram.js","components/diagrams/layoutDiagram.js","components/diagrams/navDiagram.js","components/examples/burgerButtonExample.js","components/examples/formExample.js","components/examples/remoteTriggerExample.js","components/examples/layerExample.js","components/examples/blockSizingExample.js","components/examples/iconExample.js","components/tables/APIs/blockAPI.js","components/tables/APIs/codeBlockAPI.js","components/tables/APIs/buttonAPI.js","components/tables/APIs/layerAPI.js","components/tables/breakdowns/dropdownSubcomponents.js","components/tables/breakdowns/formSubcomponents.js","components/tables/breakdowns/breakpoints.js","pages/components/button.js","pages/components/codeBlock.js","pages/components/dropdown.js","pages/components/form.js","pages/general/gettingStarted.js","pages/components/picture.js","pages/components/input.js","pages/general/layout.js","pages/components/nav.js","pages/general/styles.js","pages/general/themeControl.js","pages/general/themeCustomization.js","pages/test.js","pages/index.js","components/specific/mobileMenu.js","components/specific/pageBody.js","components/specific/pageFooter.js","components/specific/sideMenu.js","components/specific/topNav.js","pages/components/burgerbutton.js","pages/components/code.js","pages/components/icon.js","pages/components/index.js","pages/general/palette.js","pages/general/index.js","pages/errors/404.js","customStyles.js","customThemes.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","HCodeBlock","props","disableCopy","language","children","SampleCodeDropdown","justify","style","marginTop","all","text","variant","icons","Item","noHover","DropdownDiagram","context","diagram","customStyles","textAlign","xs","sm","md","lg","xl","a","b","vertical","c","LayoutDiagram","className","NavDiagram","BurgerButtonExample","cs","px0","targetID","id","remoteTrigger","triggerID","Link","to","FormExample","bordered","onSubmit","e","preventDefault","console","log","handleSubmit","Group","Field","label","type","placeholder","rounded","stretch","RemoteTriggerExample","border","paddingTop","paddingBottom","onClick","trigger","toggle","ref","el","React","Component","arr","LayerExample","map","x","key","height","padding","BlockSizingExample","IconExample","src","Icons","width","fill","BlockAPI","Header","Cell","header","Body","Row","CodeBlockAPI","ButtonAPI","LayerAPI","DropdownSubcomponents","FormSubcomponents","striped","href","BreakpointsTable","ButtonDetails","h2","theme","h1","subheading","size","isDisabled","animated","mx0","CodeBlockDetails","target","rel","DropdownDetails","mtp5","triggerType","displayType","FormDetails","GettingStartedDetails","alt","filter","name","PictureDetails","demoImg1","fluid","demoImg2","round","InputDetails","LayoutDetails","marginLeft","marginRight","paddingLeft","paddingRight","NavDetails","centerLinks","trackActive","navkey","defaultActive","defaultChecked","StylesDetails","s","ThemeControlDetails","langauge","asLink","CustomThemesDetails","color","colors","danger","test","generalLinks","route","componentLinks","MobileMenu","forwardRef","mapToLinks","scrollable","toggleBurger","collapseOnClick","activeByURL","window","location","pathname","Divider","PageBody","pageBody","useContext","ThoriumContext","history","useHistory","VpSizeName","viewportSizeName","useEffect","hlDark","document","getElementById","hlLight","disabled","includes","PageFooter","marginBottom","asAnchor","title","boxShadow","SideMenu","sideMenu","navh3","TopNav","burger","useTheme","useViewportSizeName","logoFill","sticky","topNav","logos","offState","aria-label","overrideFill","iconFill","neutral","w4","BurgerButtonDetails","CodeDetails","IconDetails","burgerButton","button","code","codeBlock","dropdown","form","icon","picture","input","nav","PaletteDetails","themeColors","neutralColors","push","value","backgroundColor","layout","styles","palette","Error404","minHeight","back","body","overflow","maxHeight","fontSize","fontFamily","fontWeight","h3","mb10","primary","overflowY","margin","pb2","secondary","p10","left","position","success","customThemes","Themes","customLight","light","primaryHover","footer","w2","b3","b0","customDark","b5","dark","App","pages","general","components","routes","path","component","renderedRoutes","exact","overrideSysTheme","defaultTheme","enableReactRouter","customTheme","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef44b612.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logos.57a7f831.svg\";","module.exports = __webpack_public_path__ + \"static/media/parrot2.58035413.webp\";","module.exports = __webpack_public_path__ + \"static/media/parrot1.3e77b36a.webp\";","/* React */\r\nimport React from \"react\";\r\n/* Thorium components */\r\nimport { CodeBlock } from \"thorium-ui\";\r\n/* Highlight.js */\r\nimport Highlight from \"react-highlight.js\";\r\n\r\n// Custom CodeBlock that implements Highlight.js\r\nexport const HCodeBlock = (props) => {\r\n  return (\r\n    <CodeBlock disableCopy={props.disableCopy}>\r\n      <Highlight language={props.language}>{props.children}</Highlight>\r\n    </CodeBlock>\r\n  );\r\n};\r\n\r\nexport default HCodeBlock;\r\n","import React from \"react\";\r\nimport { Layer, Block, Dropdown } from \"thorium-ui\";\r\n\r\nexport const SampleCodeDropdown = (props) => {\r\n  return (\r\n    <Layer justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n      <Block all={12}>\r\n        <Dropdown text=\"Sample Code\" variant=\"dark\" icons>\r\n          <Dropdown.Item noHover>{props.children}</Dropdown.Item>\r\n        </Dropdown>\r\n      </Block>\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default SampleCodeDropdown;\r\n","import React from \"react\";\r\nimport { Layer, Block, ThoriumConsumer } from \"thorium-ui\";\r\n\r\nexport const DropdownDiagram = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const diagram = context.customStyles.diagram;\r\n      return (\r\n        <Layer style={{ textAlign: \"center\" }} justify=\"center\">\r\n          <Block xs={12} sm={12} md={6} lg={6} xl={6} style={diagram.a}>\r\n            <Layer justify=\"center\">\r\n              <Block>\r\n                <p>Container</p>\r\n              </Block>\r\n              <Block all={12} style={diagram.b}>\r\n                <p>Trigger</p>\r\n              </Block>\r\n              <Block all={12} vertical style={diagram.b}>\r\n                <p>Menu</p>\r\n                <Layer justify=\"center\">\r\n                  <Block all={12} style={diagram.c}>\r\n                    <p>Item</p>\r\n                  </Block>\r\n                  <Block all={12} style={diagram.c}>\r\n                    <p>Link</p>\r\n                  </Block>\r\n                  <Block all={12} style={diagram.c}>\r\n                    <p>Divider</p>\r\n                  </Block>\r\n                </Layer>\r\n              </Block>\r\n            </Layer>\r\n          </Block>\r\n        </Layer>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default DropdownDiagram;\r\n","import React from \"react\";\r\nimport { Layer, Block, ThoriumConsumer } from \"thorium-ui\";\r\n\r\nexport const LayoutDiagram = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const diagram = cs.diagram;\r\n      return (\r\n        <Layer style={{ textAlign: \"center\" }} justify=\"center\">\r\n          <Block xs={12} sm={12} md={8} lg={8} xl={8} style={diagram.a}>\r\n            <Layer justify=\"center\">\r\n              <Block className=\"test-class\">\r\n                <p>Container</p>\r\n              </Block>\r\n              <Block all={12} style={diagram.b}>\r\n                <p>Layer</p>\r\n                <Layer justify=\"center\">\r\n                  <Block xs={6} sm={6} md={4} lg={4} xl={4} style={diagram.c}>\r\n                    <p>Block</p>\r\n                  </Block>\r\n                  <Block xs={6} sm={6} md={4} lg={4} xl={4} style={diagram.c}>\r\n                    <p>Block</p>\r\n                  </Block>\r\n                  <Block xs={6} sm={6} md={4} lg={4} xl={4} style={diagram.c}>\r\n                    <p>Block</p>\r\n                  </Block>\r\n                  <Block all={12} style={diagram.c}>\r\n                    <p>Block</p>\r\n                  </Block>\r\n                </Layer>\r\n              </Block>\r\n            </Layer>\r\n          </Block>\r\n        </Layer>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default LayoutDiagram;\r\n","import React from \"react\";\r\nimport { Layer, Block, ThoriumConsumer } from \"thorium-ui\";\r\n\r\nexport const NavDiagram = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const diagram = context.customStyles.diagram;\r\n      return (\r\n        <Layer style={{ textAlign: \"center\" }} justify=\"center\">\r\n          <Block xs={12} sm={12} md={6} lg={6} xl={6} style={diagram.a}>\r\n            <Layer justify=\"center\">\r\n              <Block>\r\n                <p>Nav</p>\r\n              </Block>\r\n              <Block all={12} style={diagram.b}>\r\n                <p>Item</p>\r\n              </Block>\r\n              <Block all={12} vertical style={diagram.b}>\r\n                <p>Item</p>\r\n                <Layer justify=\"center\">\r\n                  <Block all={12} style={diagram.c}>\r\n                    <p>Link</p>\r\n                  </Block>\r\n                </Layer>\r\n              </Block>\r\n            </Layer>\r\n          </Block>\r\n        </Layer>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default NavDiagram;\r\n","import React from \"react\";\r\nimport {\r\n  Block,\r\n  BurgerButton,\r\n  Dropdown,\r\n  Layer,\r\n  ThoriumConsumer,\r\n} from \"thorium-ui\";\r\n\r\nexport const BurgerButtonExample = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        return (\r\n          <Layer justify=\"center\">\r\n            <Block all={10} style={cs.px0}>\r\n              <Layer>\r\n                <BurgerButton\r\n                  variant=\"dark\"\r\n                  targetID=\"burger-example-menu\"\r\n                  id=\"burger-example-button\"\r\n                />\r\n              </Layer>\r\n            </Block>\r\n            <Block all={10}>\r\n              <Dropdown\r\n                remoteTrigger\r\n                triggerID=\"burger-example-button\"\r\n                id=\"burger-example-menu\"\r\n              >\r\n                <Dropdown.Link to=\"#\">Example Link</Dropdown.Link>\r\n                <Dropdown.Link to=\"#\">Example Link</Dropdown.Link>\r\n              </Dropdown>\r\n            </Block>\r\n          </Layer>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\n\r\nexport default BurgerButtonExample;\r\n","import React from \"react\";\r\nimport { Form, Layer, TextInput, Submit, Checkbox } from \"thorium-ui\";\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  console.log(\"submitted\");\r\n};\r\n\r\nexport const FormExample = () => (\r\n  <Layer justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n    <Form\r\n      bordered\r\n      onSubmit={(e) => handleSubmit(e)}\r\n      xs={12}\r\n      sm={12}\r\n      md={10}\r\n      lg={8}\r\n      xl={6}\r\n    >\r\n      <Form.Group>\r\n        <Form.Field xs={12} sm={12} md={6} lg={6} xl={6} vertical>\r\n          <TextInput label=\"Email\" type=\"email\" placeholder=\"email\" />\r\n        </Form.Field>\r\n        <Form.Field xs={12} sm={12} md={6} lg={6} xl={6} vertical>\r\n          <TextInput label=\"Password\" type=\"password\" placeholder=\"password\" />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Field>\r\n          <Checkbox\r\n            justify=\"center\"\r\n            rounded\r\n            label={\r\n              <small>I have read and understand the Terms and Conditions</small>\r\n            }\r\n          />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Form.Field all={12}>\r\n        <Submit stretch>Submit</Submit>\r\n      </Form.Field>\r\n    </Form>\r\n  </Layer>\r\n);\r\n\r\nexport default FormExample;\r\n","import React from \"react\";\r\nimport { Dropdown, Button, Block } from \"thorium-ui\";\r\n\r\nexport class RemoteTriggerExample extends React.Component {\r\n  render() {\r\n    return (\r\n      <Block\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={6}\r\n        rounded\r\n        style={{\r\n          border: \"1px solid black\",\r\n          paddingTop: \".5rem\",\r\n          paddingBottom: \".5rem\",\r\n        }}\r\n      >\r\n        <Button onClick={() => this.trigger.toggle()}>Click Me!</Button>\r\n        <p>\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing. Labore\r\n          perferendis, voluptas temporibus in reiciendis consectetur ea neque\r\n          maxime laboriosam quaerat ducimus quibusdam reprehenderit commodi non\r\n          tempore atque ex at esse!\r\n        </p>\r\n        <Dropdown remoteTrigger ref={(el) => (this.trigger = el)}>\r\n          <Dropdown.Link to=\"#\">Link</Dropdown.Link>\r\n        </Dropdown>\r\n      </Block>\r\n    );\r\n  }\r\n}\r\nexport default RemoteTriggerExample;\r\n","import React from \"react\";\r\nimport { Layer, Block, ThoriumConsumer } from \"thorium-ui\";\r\n\r\nconst arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\nexport const LayerExample = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const diagram = context.customStyles.diagram;\r\n      return (\r\n        <Layer>\r\n          {arr.map((x) => {\r\n            return (\r\n              <Block\r\n                all={1}\r\n                key={x}\r\n                style={{ ...diagram.b, height: 50, padding: 0 }}\r\n              />\r\n            );\r\n          })}\r\n        </Layer>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default LayerExample;\r\n","import React from \"react\";\r\nimport { Layer, Block, ThoriumConsumer } from \"thorium-ui\";\r\n\r\nexport const BlockSizingExample = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const diagram = context.customStyles.diagram;\r\n      return (\r\n        <Layer style={{ textAlign: \"center\" }}>\r\n          <Block xs={6} sm={5} md={4} lg={3} xl={2} style={diagram.b}>\r\n            <p>Block 1 - Explicit sizing</p>\r\n          </Block>\r\n          <Block style={diagram.b}>\r\n            <p>Block 2 - Variable sizing</p>\r\n          </Block>\r\n          <Block style={diagram.b} all={12}>\r\n            <p>Block 3 - Universal sizing</p>\r\n          </Block>\r\n        </Layer>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default BlockSizingExample;\r\n","import React from \"react\";\r\nimport { Layer, Block, Button, Icon } from \"thorium-ui\";\r\nimport Icons from \"../../assets/logos.svg\";\r\n\r\nexport const IconExample = () => (\r\n  <Layer justify=\"center\">\r\n    <Block all={6} justify=\"around\">\r\n      <Button variant=\"dark\">\r\n        <Icon\r\n          src={`${Icons}#chevron-up`}\r\n          width={24}\r\n          height={24}\r\n          fill=\"dodgerblue\"\r\n        />\r\n      </Button>\r\n      <Button variant=\"dark\">\r\n        <Icon\r\n          src={`${Icons}#chevron-down`}\r\n          width={24}\r\n          height={24}\r\n          fill=\"dodgerblue\"\r\n        />\r\n      </Button>\r\n    </Block>\r\n  </Layer>\r\n);\r\n\r\nexport default IconExample;\r\n","import React from \"react\";\r\nimport { Code, Table } from \"thorium-ui\";\r\n\r\nexport const BlockAPI = () => (\r\n  <Table>\r\n    <Table.Header>\r\n      <Table.Cell header>Name</Table.Cell>\r\n      <Table.Cell header>Description</Table.Cell>\r\n      <Table.Cell header>Datatype</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>all</Table.Cell>\r\n        <Table.Cell>\r\n          Defines the component width out of 12 for all breakpoints\r\n        </Table.Cell>\r\n        <Table.Cell>integer</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>xs, sm, md, lg, xl</Table.Cell>\r\n        <Table.Cell>\r\n          Defines the component width out of 12 for each respective breakpoint\r\n        </Table.Cell>\r\n        <Table.Cell>integer</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>translucent</Table.Cell>\r\n        <Table.Cell>Reduces the opacity of the background color</Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>vertical</Table.Cell>\r\n        <Table.Cell>\r\n          Sets <Code>flex-direction</Code> style to \"column\"\r\n        </Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default BlockAPI;\r\n","import React from \"react\";\r\nimport { Table } from \"thorium-ui\";\r\nexport const CodeBlockAPI = () => (\r\n  <Table>\r\n    <Table.Header>\r\n      <Table.Cell header>Name</Table.Cell>\r\n      <Table.Cell header>Description</Table.Cell>\r\n      <Table.Cell header>Datatype</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>language</Table.Cell>\r\n        <Table.Cell>\r\n          Defines the programming language to be parsed for syntax highlighting\r\n        </Table.Cell>\r\n        <Table.Cell>string</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>disbleCopy</Table.Cell>\r\n        <Table.Cell>Disables the built-in copy functionality</Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>disableSelect</Table.Cell>\r\n        <Table.Cell>\r\n          Disables the users ability to select/copy the text contents\r\n        </Table.Cell>\r\n        <Table.Cell>string</Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default CodeBlockAPI;\r\n","import React from \"react\";\r\nimport { Table } from \"thorium-ui\";\r\n\r\nexport const ButtonAPI = () => (\r\n  <Table>\r\n    <Table.Header>\r\n      <Table.Cell header>Name</Table.Cell>\r\n      <Table.Cell header>Description</Table.Cell>\r\n      <Table.Cell header>Datatype</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>variant</Table.Cell>\r\n        <Table.Cell>Defines the color styling</Table.Cell>\r\n        <Table.Cell>string</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>size</Table.Cell>\r\n        <Table.Cell>Defines the size styling</Table.Cell>\r\n        <Table.Cell>string</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>stretch</Table.Cell>\r\n        <Table.Cell>Expands the button to fill its parent</Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>animated</Table.Cell>\r\n        <Table.Cell>Adds a subtle animation when clicked</Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default ButtonAPI;\r\n","import React from \"react\";\r\nimport { Code, Table } from \"thorium-ui\";\r\n\r\nexport const LayerAPI = () => (\r\n  <Table>\r\n    <Table.Header>\r\n      <Table.Cell header>Name</Table.Cell>\r\n      <Table.Cell header>Description</Table.Cell>\r\n      <Table.Cell header>Datatype</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>justify</Table.Cell>\r\n        <Table.Cell>\r\n          Sets the <Code>justify-content</Code> style\r\n        </Table.Cell>\r\n        <Table.Cell>string</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>rounded</Table.Cell>\r\n        <Table.Cell>Adds a subtle border-radius</Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>translucent</Table.Cell>\r\n        <Table.Cell>Reduces the opacity of the background color</Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>sticky</Table.Cell>\r\n        <Table.Cell>\r\n          Sets <Code>position</Code> style to \"sticky\"\r\n        </Table.Cell>\r\n        <Table.Cell>boolean</Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default LayerAPI;\r\n","import React from \"react\";\r\nimport { Table, Code } from \"thorium-ui\";\r\n\r\nexport const DropdownSubcomponents = () => (\r\n  <Table>\r\n    <Table.Header>\r\n      <Table.Cell header>Component Name</Table.Cell>\r\n      <Table.Cell header>Description</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>Container</Table.Cell>\r\n        <Table.Cell>\r\n          A wrapper containing all other <Code>Dropdown</Code> subcomponents\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Trigger</Table.Cell>\r\n        <Table.Cell>\r\n          The button which toggles the \"active\" state of the <Code>Menu</Code>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Menu</Table.Cell>\r\n        <Table.Cell>\r\n          The collapsible portion which contains the interactive components\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Item</Table.Cell>\r\n        <Table.Cell>\r\n          A styalized container that can hold any other component\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Link</Table.Cell>\r\n        <Table.Cell>A styalized Link component</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Divider</Table.Cell>\r\n        <Table.Cell>\r\n          A styalized horizontal divider used to separate different sections in\r\n          the <Code>Menu</Code>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default DropdownSubcomponents;\r\n","import React from \"react\";\r\nimport { Code, Table } from \"thorium-ui\";\r\n\r\nexport const FormSubcomponents = () => (\r\n  <Table bordered>\r\n    <Table.Header>\r\n      <Table.Cell header>Component Name</Table.Cell>\r\n      <Table.Cell header>Description</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body striped>\r\n      <Table.Row>\r\n        <Table.Cell>Form</Table.Cell>\r\n        <Table.Cell>\r\n          The main wrapper which contains all other subcomponents. Renders as a\r\n          standard HTML form element.\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row bordered>\r\n        <Table.Cell>Group</Table.Cell>\r\n        <Table.Cell>\r\n          A <Code>Layer</Code> wrapper designed to contain a set of related{\" \"}\r\n          <Code>Fields</Code>. A <Code>Group</Code> can contain any number of{\" \"}\r\n          <Code>Fields</Code>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Field</Table.Cell>\r\n        <Table.Cell>\r\n          A <Code>Block</Code> wrapper designed to contain an individual{\" \"}\r\n          <Code>Input</Code>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Input</Table.Cell>\r\n        <Table.Cell>\r\n          The interactive user input. (See <a href=\"/input\">Input</a> for more\r\n          information on individual inputs)\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default FormSubcomponents;\r\n","import React from \"react\";\r\nimport { Table } from \"thorium-ui\";\r\nexport const BreakpointsTable = () => (\r\n  <Table style={{ textAlign: \"center\" }}>\r\n    <Table.Header>\r\n      <Table.Cell header>Name</Table.Cell>\r\n      <Table.Cell header>Breakpoint Width</Table.Cell>\r\n    </Table.Header>\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>xs</Table.Cell>\r\n        <Table.Cell>less than 576px</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>sm</Table.Cell>\r\n        <Table.Cell>576px - 1023px</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>md</Table.Cell>\r\n        <Table.Cell>1024px - 1365px</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>lg</Table.Cell>\r\n        <Table.Cell>1366px - 1919px</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>xl</Table.Cell>\r\n        <Table.Cell>1920px or geater</Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n);\r\n\r\nexport default BreakpointsTable;\r\n","import React from \"react\";\r\nimport { Block, Button, Code, Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport {\r\n  PageBody,\r\n  HCodeBlock,\r\n  ButtonAPI,\r\n  SampleCodeDropdown,\r\n} from \"components\";\r\n\r\nexport const ButtonDetails = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      return (\r\n        <PageBody>\r\n          <p style={cs.h1}>Button</p>\r\n          <p style={cs.subheading}>\r\n            Throium-UI contains a variety of pre-styled, theme-dependant buttons\r\n            to fit any purpose.\r\n          </p>\r\n          <p style={h2}>Variants</p>\r\n          <p>\r\n            To incorporate a <Code>Button</Code> style, include one of the\r\n            following <Code>variant</Code> props. If none is given, the button\r\n            will default to <Code>primary</Code>.\r\n          </p>\r\n          <Layer justify=\"evenly\">\r\n            <Button variant=\"primary\">Primary</Button>\r\n            <Button variant=\"secondary\">Secondary</Button>\r\n            <Button variant=\"success\">Success</Button>\r\n            <Button variant=\"warning\">Warning</Button>\r\n            <Button variant=\"danger\">Danger</Button>\r\n            <Button variant=\"light\">Light</Button>\r\n            <Button variant=\"dark\">Dark</Button>\r\n            <Button variant=\"link\">Link</Button>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`<Button variant=\"primary\">Primary</Button>\\n` +\r\n                `<Button variant=\"secondary\">Secondary</Button>\\n` +\r\n                `<Button variant=\"success\">Success</Button>\\n` +\r\n                `<Button variant=\"warning\">Warning</Button>\\n` +\r\n                `<Button variant=\"danger\">Danger</Button>\\n` +\r\n                `<Button variant=\"light\">Light</Button>\\n` +\r\n                `<Button variant=\"dark\">Dark</Button>\\n` +\r\n                `<Button variant=\"link\">Link</Button>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>Sizing</p>\r\n          <p>\r\n            To change the size of a <Code>Button</Code>, give it one of the\r\n            following <Code>size</Code> props. If none is give, it will default\r\n            to <Code>normal</Code>.\r\n          </p>\r\n          <Layer justify=\"evenly\">\r\n            <Button size=\"lg\">Large</Button>\r\n            <Button size=\"normal\">Normal</Button>\r\n            <Button size=\"sm\">Small</Button>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`\r\n<Button size=\"lg\">Large</Button>\r\n<Button size=\"normal\">Normal</Button>\r\n<Button size=\"sm\">Small</Button>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>Disabled</p>\r\n          <p>\r\n            As its name implies, the <Code>isDisabled</Code> prop disables the\r\n            button, as well as adding a \"disabled\" appearance.\r\n          </p>\r\n          <Layer justify=\"evenly\">\r\n            <Button variant=\"primary\" isDisabled>\r\n              Primary\r\n            </Button>\r\n            <Button variant=\"secondary\" isDisabled>\r\n              Secondary\r\n            </Button>\r\n            <Button variant=\"success\" isDisabled>\r\n              Success\r\n            </Button>\r\n            <Button variant=\"warning\" isDisabled>\r\n              Warning\r\n            </Button>\r\n            <Button variant=\"danger\" isDisabled>\r\n              Danger\r\n            </Button>\r\n            <Button variant=\"light\" isDisabled>\r\n              Light\r\n            </Button>\r\n            <Button variant=\"dark\" isDisabled>\r\n              Dark\r\n            </Button>\r\n            <Button variant=\"link\" isDisabled>\r\n              Link\r\n            </Button>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`\r\n<Button variant=\"primary\" isDisabled>Primary</Button>\r\n<Button variant=\"secondary\" isDisabled>Secondary</Button>\r\n<Button variant=\"success\" isDisabled>Success</Button>\r\n<Button variant=\"warning\" isDisabled>Warning</Button>\r\n<Button variant=\"danger\" isDisabled>Danger</Button>\r\n<Button variant=\"light\" isDisabled>Light</Button>\r\n<Button variant=\"dark\" isDisabled>Dark</Button>\r\n<Button variant=\"link\" isDisabled>Link</Button>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>Stretch</p>\r\n          <p>\r\n            The <Code>stretch</Code> prop will cause the button to fill the\r\n            entire width of its parent.\r\n          </p>\r\n          <Layer justify=\"center\">\r\n            <Button stretch>Stretched</Button>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock>{`<Button stretch>Stretched</Button>`}</HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>Animated</p>\r\n          <p>\r\n            The <Code>animated</Code> prop will add a subtle animation when the\r\n            button is clicked to improve feedback to the user.\r\n          </p>\r\n          <Layer justify=\"center\">\r\n            <Button animated>Click Me!</Button>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock>\r\n              {`<Button size=\"lg\" animated>Click Me!</Button>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>API</p>\r\n          <Layer justify=\"center\" style={cs.mx0}>\r\n            <Block\r\n              xs={12}\r\n              sm={12}\r\n              md={12}\r\n              lg={10}\r\n              xl={8}\r\n              justify=\"center\"\r\n              vertical\r\n              style={cs.px0}\r\n            >\r\n              <h3>Button</h3>\r\n              <ButtonAPI />\r\n            </Block>\r\n          </Layer>\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n","import React from \"react\";\r\nimport { CodeBlock, Code, Block, Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport { CodeBlockAPI, PageBody } from \"components\";\r\n\r\nexport const CodeBlockDetails = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      return (\r\n        <PageBody>\r\n          <p style={cs.h1}>CodeBlock</p>\r\n          <p style={cs.subheading}>\r\n            <Code>CodeBlock</Code> provides a convenient way to share any text\r\n            that needs to retain a specific formatting (such as blocks of code).{\" \"}\r\n            <Code>CodeBlock</Code> components come with a built-in\r\n            copy-to-clipboard button, no setup required.\r\n          </p>\r\n\r\n          <p style={h2}>How to Use</p>\r\n          <p>\r\n            To display a block of plain pre-formatted text, simply pass it as a\r\n            child in the form of a Javascript template literal, and it will be\r\n            displayed exactly as written.\r\n          </p>\r\n          <Layer>\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <p>Input</p>\r\n              <CodeBlock>\r\n                {`<CodeBlock>\\n` +\r\n                  `{\\n\\`CodeBlock line 1\\n` +\r\n                  `   CodeBlock line 2\\n` +\r\n                  `     CodeBlock line 3\\` \\n}\\n` +\r\n                  `</CodeBlock>`}\r\n              </CodeBlock>\r\n            </Block>\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <p>Output</p>\r\n              <CodeBlock>\r\n                {`CodeBlock line 1\\n` +\r\n                  `  CodeBlock line 2\\n` +\r\n                  `     CodeBlock line 3`}\r\n              </CodeBlock>\r\n            </Block>\r\n          </Layer>\r\n          <p style={h2}>Syntax Highlighting</p>\r\n\r\n          <h3>\r\n            Third-party Javascript parsers <br />\r\n          </h3>\r\n          <p>\r\n            Until an integrated solution is developed, it is currently\r\n            recommended to use a third-party parsing plugin, such as{\" \"}\r\n            <a\r\n              href=\"https://highlightjs.org/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              <Code>Highlight.js</Code>\r\n            </a>{\" \"}\r\n            for syntax highlighting.\r\n          </p>\r\n          <p style={h2}>Disabling copy functionality</p>\r\n          <p>\r\n            If you prefer a <Code>CodeBlock</Code> without the built-in copy\r\n            button, use the prop <Code>disableCopy</Code>.\r\n          </p>\r\n          <p>\r\n            To disable the ability for users to manually copy the contents of\r\n            the <Code>CodeBlock</Code>, add the <Code>disableSelect</Code> prop.\r\n          </p>\r\n          <p style={h2}>API</p>\r\n          <CodeBlockAPI />\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default CodeBlockDetails;\r\n","import React from \"react\";\r\nimport {\r\n  PageBody,\r\n  HCodeBlock,\r\n  SampleCodeDropdown,\r\n  DropdownDiagram,\r\n  DropdownSubcomponents,\r\n  RemoteTriggerExample,\r\n} from \"components\";\r\nimport {\r\n  Block,\r\n  Button,\r\n  Code,\r\n  Dropdown,\r\n  Layer,\r\n  ThoriumConsumer,\r\n} from \"thorium-ui\";\r\n\r\nexport const DropdownDetails = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      return (\r\n        <PageBody>\r\n          <p style={cs.h1}>Dropdown</p>\r\n          <p style={cs.subheading}>\r\n            A <Code>Dropdown</Code> is a collapsable menu with a customizable\r\n            trigger.\r\n          </p>\r\n          <p style={h2}>Subcomponent layout</p>\r\n          <DropdownDiagram />\r\n          <p style={h2}>Subcomponents</p>\r\n          <DropdownSubcomponents />\r\n          <p style={h2}>Behaviors</p>\r\n          <h3>defaultState</h3>\r\n          <p>\r\n            By default, <Code>Dropdown</Code> components are initially rendered\r\n            in their closed state. To change this, set the{\" \"}\r\n            <Code>defaultState</Code> prop to \"open\".\r\n          </p>\r\n          <h3>text</h3>\r\n          <p>\r\n            Define the text to be displayed on the trigger button with the{\" \"}\r\n            <Code>text</Code> prop.\r\n          </p>\r\n          <h3>collapseOnClick</h3>\r\n          <p>\r\n            If you would like the dropdown to automatically collapse after\r\n            clicking an item within its menu, use the collapseOnClick prop.\r\n          </p>\r\n          <h3>triggerType</h3>\r\n          <p>\r\n            By default, a <Code>Dropdown</Code> is activated by clicking the\r\n            trigger button. To activate the menu by hovering, set the{\" \"}\r\n            <Code>triggerType</Code> prop to \"hover\".\r\n          </p>\r\n          <Layer>\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6} style={cs.mtp5}>\r\n              <Dropdown triggerType=\"click\" text=\"Click Me!\">\r\n                <Dropdown.Item>\r\n                  <Button stretch>Item</Button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Link to=\"#\">Link</Dropdown.Link>\r\n              </Dropdown>\r\n            </Block>\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6} style={cs.mtp5}>\r\n              <Dropdown triggerType=\"hover\" text=\"Hover Me!\">\r\n                <Dropdown.Item>\r\n                  <Button stretch>Item</Button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Link to=\"#\">Link</Dropdown.Link>\r\n              </Dropdown>\r\n            </Block>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`<Dropdown triggerType=\"click\" text=\"Click Me!\">\\n` +\r\n                `  <Dropdown.Item>\\n` +\r\n                `    <Button stretch>Item</Button>\\n` +\r\n                `  </Dropdown.Item>\\n` +\r\n                `  <Dropdown.Link to=\"#\">Link</Dropdown.Link>\\n` +\r\n                `</Dropdown>\\n` +\r\n                `<Dropdown triggerType=\"hover\" text=\"Hover Me!\">\\n` +\r\n                `  <Dropdown.Item>\\n` +\r\n                `    <Button stretch>Item</Button>\\n` +\r\n                `  </Dropdown.Item>\\n` +\r\n                `  <Dropdown.Link to=\"#\">Link</Dropdown.Link>\\n` +\r\n                `</Dropdown>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <h3>displayType</h3>\r\n          <p>\r\n            By default, adjacent content will be pushed out of the way when\r\n            expanded. However, the <Code>Menu</Code> can be set to float over\r\n            other content when expanded, pass \"float\" to the{\" \"}\r\n            <Code>displayType</Code> prop.\r\n          </p>\r\n          <Layer justify=\"evenly\">\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6} style={cs.mtp5}>\r\n              <Dropdown displayType=\"block\" text=\"block\">\r\n                <Dropdown.Link to=\"#\">Link</Dropdown.Link>\r\n              </Dropdown>\r\n            </Block>\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6} style={cs.mtp5}>\r\n              <Dropdown displayType=\"float\" text=\"float\">\r\n                <Dropdown.Link to=\"#\">Link</Dropdown.Link>\r\n              </Dropdown>\r\n            </Block>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`<Dropdown displayType=\"block\" text=\"block\">\\n` +\r\n                `  <DropdownLink to=\"#\">Link</DropdownLink>\\n` +\r\n                `</Dropdown>\\n` +\r\n                `<Dropdown displayType=\"float\" text=\"float\">\\n` +\r\n                `  <DropdownLink to=\"#\">Link</DropdownLink>\\n` +\r\n                `</Dropdown>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <h3>Triggering remotely</h3>\r\n          <p>\r\n            To toggle the <Code>Menu</Code> from a sibling component:\r\n          </p>\r\n          <ol>\r\n            <li>\r\n              Pass the <Code>remoteTrigger</Code> prop to the{\" \"}\r\n              <Code>Dropdown</Code>.\r\n            </li>\r\n            <li>\r\n              In the parent, create a <Code>ref</Code> and pass it to the{\" \"}\r\n              <Code>Dropdown</Code>.\r\n            </li>\r\n            <li>\r\n              Provide an event handler to the desired trigger, passing the\r\n              corresponding <Code>toggle()</Code> callback function.\r\n            </li>\r\n          </ol>\r\n          <h3>Example:</h3>\r\n          <Layer justify=\"center\">\r\n            <RemoteTriggerExample />\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"javascript\">\r\n              {`import React from \"react\";\\n` +\r\n                `import { Block, Button, Dropdown } from \"../thorium-ui\";\\n\\n` +\r\n                `class MyComponent extends React.Component {\\n` +\r\n                `   render() {\\n` +\r\n                `     return (\\n` +\r\n                `          <Block>\\n` +\r\n                `            <div>\\n` +\r\n                `              <Button onClick={() => this.trigger.toggle()}>\\n` +\r\n                `                Click Me!\\n` +\r\n                `              </Button>\\n` +\r\n                `            </div>\\n` +\r\n                `            <p>\\n` +\r\n                `               Lorem ipsum dolor, sit amet consectetur adipisicing.\\n` +\r\n                `               Labore perferendis, voluptas temporibus in\\n` +\r\n                `               reiciendis consectetur ea neque maxim\\n` +\r\n                `               laboriosam quaerat ducimusquibusdam reprehenderit\\n` +\r\n                `               commodi non tempore atque ex at esse!\\n` +\r\n                `            </p>\\n` +\r\n                `            <Dropdown remoteTrigger ref={(el) => (this.trigger = el)}>\\n` +\r\n                `              <Dropdown.Link to=\"#\">Link</Dropdown.Link>\\n` +\r\n                `            </Dropdown>\\n` +\r\n                `           </Block>);\\n` +\r\n                `         }\\n` +\r\n                ` }\\n` +\r\n                `export default MyComponent;`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>Styling</p>\r\n          <h3>icons</h3>\r\n          <p>\r\n            To add corresponding \"open\" and \"close\" icons to the trigger button,\r\n            pass the <Code>icons</Code> prop.\r\n          </p>\r\n          <Layer justify=\"evenly\">\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6} style={cs.mtp5}>\r\n              <Dropdown text=\"Icons\" icons>\r\n                <Dropdown.Link to=\"#\">Link</Dropdown.Link>\r\n              </Dropdown>\r\n            </Block>\r\n          </Layer>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`<Dropdown text=\"Icons\" icons>\\n` +\r\n                `  <Dropdown.Link to=\"#\">Link</Dropdown.Link>\\n` +\r\n                `</Dropdown>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <h3>Other styling</h3>\r\n          <p>\r\n            The <Code>Trigger</Code> is just a <Code>Button</Code> at its core,\r\n            and as such can be styled by passing the same <Code>size</Code> and{\" \"}\r\n            <Code>variant</Code> props.\r\n          </p>\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n","import React from \"react\";\r\nimport { Block, Code, Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport { FormSubcomponents, FormExample, PageBody } from \"components\";\r\n\r\nexport const FormDetails = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      const diagram = cs.diagram;\r\n      return (\r\n        <PageBody>\r\n          <h1>Form</h1>\r\n          <p>\r\n            Thorium-UI contains a selection of theme-able, responsive{\" \"}\r\n            <Code>Form</Code> components to quickly and easily make an\r\n            attractive, modern form.\r\n          </p>\r\n          <p style={h2}>Subcomponent Layout</p>\r\n          <Layer style={{ textAlign: \"center\" }} justify=\"center\">\r\n            <Block xs={12} sm={12} md={6} lg={6} xl={6} style={diagram.a}>\r\n              <Layer justify=\"center\">\r\n                <Block>\r\n                  <p>Form</p>\r\n                </Block>\r\n                <Block all={12} vertical style={diagram.b}>\r\n                  <p>Group</p>\r\n                  <Layer justify=\"center\">\r\n                    <Block all={12} style={diagram.c}>\r\n                      <p>Field</p>\r\n                      <Layer>\r\n                        <Block all={12} style={diagram.b}>\r\n                          <p>Input</p>\r\n                        </Block>\r\n                      </Layer>\r\n                    </Block>\r\n                    <Block all={12} style={diagram.c}>\r\n                      <p>Field</p>\r\n                      <Layer>\r\n                        <Block all={12} style={diagram.b}>\r\n                          <p>Input</p>\r\n                        </Block>\r\n                      </Layer>\r\n                    </Block>\r\n                  </Layer>\r\n                </Block>\r\n              </Layer>\r\n            </Block>\r\n          </Layer>\r\n\r\n          <p style={h2}>Subcomponents</p>\r\n          <FormSubcomponents />\r\n\r\n          <p style={h2}>Example</p>\r\n          <FormExample />\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\nexport default FormDetails;\r\n","import React from \"react\";\r\nimport { Code,  Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport { HCodeBlock, PageBody } from \"components\";\r\n\r\nexport const GettingStartedDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <Layer justify=\"center\" style={{ marginTop: \"3rem\" }}>\r\n              <img\r\n                src=\"https://i.ibb.co/6y2RSZf/banner.png\"\r\n                alt=\"thorium logo\"\r\n                width=\"100%\"\r\n                style={{filter: context.theme.name===\"light\" ? \"invert(100%)\" : null}}\r\n              />\r\n            </Layer>\r\n            <span style={cs.subheading}>\r\n              An intuitive React.js framework with which to quickly build themed\r\n              applications, without needing a ton of CSS clutter.\r\n            </span>\r\n            <hr />\r\n            <p style={cs.h1}>Getting Started</p>\r\n            <span style={cs.subheading}>\r\n              Use the following instructions to get up and running with\r\n              Thorium-UI.\r\n            </span>\r\n            <p style={h2}>Installation</p>\r\n            <HCodeBlock>{`npm i thorium-ui`}</HCodeBlock>\r\n\r\n            <p style={h2}>Using ThoriumRoot</p>\r\n            <p>\r\n              Once you've included <Code>Thorium-UI</Code> in your project, some\r\n              very minimal boilerplate is needed to get up and running.\r\n            </p>\r\n            <ol>\r\n              <li>\r\n                In your App.jsx file, begin by importing the{\" \"}\r\n                <Code>ThoriumRoot</Code> component from <Code>Thorium-UI</Code>.\r\n              </li>\r\n              <li>\r\n                Wrap the <Code>ThoriumRoot</Code> around the rest of your App\r\n                contents.\r\n              </li>\r\n              <li>\r\n                <i>(optional)</i> If you're using <Code>customThemes</Code> or{\" \"}\r\n                <Code>customStyles</Code>, import them at the top of your{\" \"}\r\n                <Code>App.jsx</Code> file, and pass them as corresponding props\r\n                to <Code>ThoriumRoot</Code>.\r\n              </li>\r\n            </ol>\r\n            <p>\r\n              Your <Code>App.jsx</Code> file should look like the following.\r\n            </p>\r\n\r\n            <HCodeBlock language=\"javascript\">\r\n              {`import React from \"react\";\r\nimport { ThoriumRoot } from \"thorium-ui\";\r\nimport customStyles from \"./customStyles.js\";\r\nimport customThemes from \"./customThemes.js\";\r\n\r\nexport const App = (props) => {\r\n  return (\r\n    <ThoriumRoot customStyles={customStyles} customThemes={customThemes}>\r\n      /* YOUR COMPONENTS HERE */\r\n    </ThoriumRoot>\r\n  );\r\n}\r\nexport default App;`}\r\n            </HCodeBlock>\r\n            <p style={{ ...cs.h1, textAlign: \"center\" }}>Thats it!</p>\r\n            <p style={{ ...cs.subheading, textAlign: \"center\" }}>\r\n              With that finished, you're now ready to begin using Thorium-UI!\r\n            </p>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Block, Code, Picture, Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport { PageBody } from \"components\";\r\nimport demoImg1 from \"assets/images/parrot2.webp\";\r\nimport demoImg2 from \"assets/images/parrot1.webp\";\r\n\r\nexport const PictureDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <p style={cs.h1}>Picture</p>\r\n            <p style={cs.subheading}>\r\n              The <Code>Picture</Code> component allows for quick implementation\r\n              of popular image styles.\r\n            </p>\r\n            <p style={h2}>Sizing</p>\r\n            <p style={cs.subheading}>\r\n              To scale the <Code>Picture</Code> with its parent, use the{\" \"}\r\n              <Code>fluid</Code> prop.\r\n            </p>\r\n\r\n            <Layer style={{ textAlign: \"center\" }}>\r\n              <Block xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Picture src={demoImg1} fluid=\"half\" alt=\"demo-image-1\" />\r\n                <p>half</p>\r\n              </Block>\r\n              <Block xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Picture src={demoImg1} fluid=\"full\" alt=\"demo-image-1\" />\r\n                <p>full</p>\r\n              </Block>\r\n            </Layer>\r\n\r\n            <p style={h2}>Borders</p>\r\n            <p style={cs.subheading}>\r\n              <Code>Picture</Code> components have two preset border-radius\r\n              options.\r\n            </p>\r\n\r\n            <Layer justify=\"evenly\" style={{ textAlign: \"center\" }}>\r\n              <Block all={4} vertical>\r\n                <Picture src={demoImg2} fluid=\"full\" round alt=\"demo-image-2\" />\r\n                <p>Round</p>\r\n              </Block>\r\n              <Block all={4} vertical>\r\n                <Picture\r\n                  src={demoImg2}\r\n                  fluid=\"full\"\r\n                  rounded\r\n                  alt=\"demo-image-2\"\r\n                />\r\n                <p>Rounded</p>\r\n              </Block>\r\n            </Layer>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { PageBody } from \"components\";\r\nexport const InputDetails = (props) => {\r\n  return <PageBody></PageBody>;\r\n};\r\n","import React from \"react\";\r\nimport { Block, Code, Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport {\r\n  LayoutDiagram,\r\n  BlockAPI,\r\n  LayerAPI,\r\n  PageBody,\r\n  LayerExample,\r\n  BlockSizingExample,\r\n  SampleCodeDropdown,\r\n  HCodeBlock,\r\n  BreakpointsTable,\r\n} from \"components\";\r\n\r\nexport const LayoutDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <p style={cs.h1}>Layout Basics</p>\r\n            <p style={cs.subheading}>\r\n              Thorium-UI uses a flexbox-based grid system to enable responsive\r\n              layout design. The three basic building blocks of Thorium-UI\r\n              components are <Code>Container</Code>, <Code>Layer</Code>, and{\" \"}\r\n              <Code>Block</Code>.\r\n            </p>\r\n            <p style={h2}>Component Layout</p>\r\n            <LayoutDiagram />\r\n            <h2 style={h2}>Container</h2>\r\n            <p style={cs.subheading}>\r\n              A responsive, centered and padded wrapper for page contents. The\r\n              component's <Code>max-width</Code> is calculated from the current\r\n              viewport width, and will scale appropriately to ensure proper\r\n              spacing regardless of viewport size.\r\n            </p>\r\n            <h2 style={h2}>Layer</h2>\r\n            <p style={cs.subheading}>\r\n              A <Code>Layer</Code> defines a horizontal row in the page grid,\r\n              segmented into 12 blocks.\r\n            </p>\r\n\r\n            <LayerExample />\r\n\r\n            <p style={h2}>Block</p>\r\n            <p style={cs.subheading}>\r\n              A <Code>Block</Code> defines a column within a Layer. Each{\" \"}\r\n              <Code>Block</Code> can occupy up to 12 possible spaces in each{\" \"}\r\n              <Code>Layer</Code>, in increments of 1.\r\n            </p>\r\n            <p style={h2}>Breakpoints</p>\r\n            <p>\r\n              In order to provide a consistently responsive layout, Thorium-UI\r\n              uses pre-determined breakpoints calculated from the viewport width\r\n              to trigger component updates. The current viewport size and name\r\n              can be accessed anywhere via <Code>ThoriumContext</Code>.\r\n            </p>\r\n            <BreakpointsTable />\r\n\r\n            <p style={h2}>Defining Block Sizing</p>\r\n            <p>\r\n              By default, if no sizing props are defined, a <Code>Block</Code>{\" \"}\r\n              will expand to fill all available space in a <Code>Layer</Code>{\" \"}\r\n              that is not occupied by another component.\r\n            </p>\r\n            <p>\r\n              <Code>Block</Code> sizing is defined by supplying any combination\r\n              of breakpoint props with an integer corresponding to the number of\r\n              spaces it should occupy within the <Code>Layer</Code>.\r\n            </p>\r\n            <p>\r\n              Using the <Code>all</Code> prop will override any other sizing\r\n              props and apply the corresponding size at all breakpoints.\r\n            </p>\r\n            <BlockSizingExample />\r\n\r\n            <SampleCodeDropdown>\r\n              <HCodeBlock language=\"html\">\r\n                {`<Layer style={{ textAlign: \"center\" }}>\\n` +\r\n                  `  <Block xs={6} sm={5} md={4} lg={3} xl={2} style={diagram.b}>\\n` +\r\n                  `    <p>Block 1 - Explicit sizing</p>\\n` +\r\n                  `  </Block>\\n` +\r\n                  `  <Block style={diagram.b}>\\n` +\r\n                  `    <p>Block 2 - Variable sizing</p>\\n` +\r\n                  `  </Block>\\n` +\r\n                  `  <Block style={diagram.b} all={12}>\\n` +\r\n                  `    <p>Block 3 - Universal sizing</p>\\n` +\r\n                  `  </Block>\\n` +\r\n                  `</Layer>`}\r\n              </HCodeBlock>\r\n            </SampleCodeDropdown>\r\n\r\n            <p style={h2}>API</p>\r\n            <Layer justify=\"center\" style={{ marginLeft: 0, marginRight: 0 }}>\r\n              <Block\r\n                xs={12}\r\n                sm={12}\r\n                md={12}\r\n                lg={10}\r\n                xl={8}\r\n                justify=\"center\"\r\n                vertical\r\n                style={{ paddingLeft: 0, paddingRight: 0 }}\r\n              >\r\n                <h3>Layer</h3>\r\n                <LayerAPI />\r\n                <h3>Block</h3>\r\n                <BlockAPI />\r\n              </Block>\r\n            </Layer>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Checkbox, Code, Nav, ThoriumConsumer } from \"thorium-ui\";\r\nimport { HCodeBlock, NavDiagram, PageBody } from \"components\";\r\n\r\nexport const NavDetails = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      return (\r\n        <PageBody>\r\n          <h1 style={cs.h1}>Nav</h1>\r\n          <p style={cs.subheading}>\r\n            Navs provide a pre-styled navigation menu that can be included in\r\n            any layout component.\r\n          </p>\r\n          <p style={h2}>Subcomponent Layout</p>\r\n          <NavDiagram />\r\n          <p style={h2}>Basic Nav</p>\r\n\r\n          <Nav justify=\"evenly\" centerLinks trackActive>\r\n            <Nav.Link to=\"#\" navkey={0}>\r\n              Link 1\r\n            </Nav.Link>\r\n            <Nav.Link to=\"#\" navkey={1}>\r\n              Link 2\r\n            </Nav.Link>\r\n            <Nav.Link to=\"#\" navkey={2}>\r\n              Link 3\r\n            </Nav.Link>\r\n          </Nav>\r\n\r\n          <HCodeBlock language=\"html\">\r\n            {`<Nav justify=\"evenly\">\\n` +\r\n              `   <Nav.Link>Link 1</Nav.Link>\\n` +\r\n              `   <Nav.Link>Link 2</Nav.Link>\\n` +\r\n              `   <Nav.Link>Link 3</Nav.Link>\\n` +\r\n              `</Nav>`}\r\n          </HCodeBlock>\r\n          <p style={h2}>Vertical Nav</p>\r\n          <p>\r\n            Because it is a flexbox item at its core, the Nav component accepts\r\n            a <Code>vertical</Code> prop, which will render the nav items\r\n            vertically, rather than the standard horizontal styling.\r\n          </p>\r\n          <Nav vertical centerLinks>\r\n            <Nav.Link to=\"#\">Link 1</Nav.Link>\r\n            <Nav.Link to=\"#\">Link 2</Nav.Link>\r\n            <Nav.Link to=\"#\">Link 3</Nav.Link>\r\n          </Nav>\r\n          <HCodeBlock language=\"html\">\r\n            {`<Nav vertical centerLinks>\\n` +\r\n              `   <Nav.Link>Link 1</Nav.Link>\\n` +\r\n              `   <Nav.Link>Link 2</Nav.Link>\\n` +\r\n              `   <Nav.Link>Link 3</Nav.Link>\\n` +\r\n              `</Nav>`}\r\n          </HCodeBlock>\r\n          <p style={h2}>Active Item</p>\r\n          <p>\r\n            If a <Code>Nav</Code> has more than one child component, it is\r\n            possible to indicate which item is currently active via the{\" \"}\r\n            <Code>trackActive</Code> prop. This will automatically switch the{\" \"}\r\n            <Code>activeItem</Code> state of the <Code>Nav</Code> when a new\r\n            item is clicked.\r\n          </p>\r\n          <p>\r\n            To set the item which is active by default, simply supply a{\" \"}\r\n            <Code>defaultActive</Code>\r\n            prop with the index of the desired item.\r\n          </p>\r\n          <Nav justify=\"evenly\" trackActive defaultActive={1} centerLinks>\r\n            <Nav.Link to=\"#\">Link 1</Nav.Link>\r\n            <Nav.Link to=\"#\">Link 2</Nav.Link>\r\n            <Nav.Link to=\"#\">Link 3</Nav.Link>\r\n          </Nav>\r\n          <HCodeBlock language=\"html\">\r\n            {`<Nav justify=\"evenly\" trackActive defaultActive={1} centerLinks>\\n` +\r\n              `   <Nav.Link>Link 1</Nav.Link>\\n` +\r\n              `   <Nav.Link>Link 2</Nav.Link>\\n` +\r\n              `   <Nav.Link>Link 3</Nav.Link>\\n` +\r\n              `</Nav>`}\r\n          </HCodeBlock>\r\n          <p style={h2}>asAnchor</p>\r\n          <p>\r\n            In cases where you do not need / want a React-Router Link component,\r\n            passing the <Code>asAnchor</Code> prop will create a vanilla anchor\r\n            tag instead.\r\n          </p>\r\n          <h2>NavItem</h2>\r\n          <p>\r\n            <Code>NavItem</Code> components provide a simple padded wrapper to\r\n            encapsulate different items within a nav. A <Code>NavItem</Code> can\r\n            contain any component, as it renders as a custom <Code>div</Code>{\" \"}\r\n            element.\r\n          </p>\r\n          <h2>NavLink</h2>\r\n          <p>\r\n            A <Code>NavLink</Code> renders a styled React Router{\" \"}\r\n            <Code>Link</Code> component. Because of this, React Router must be\r\n            installed as a dependency in order for <Code>NavLink</Code> to\r\n            render.\r\n          </p>\r\n          <HCodeBlock>{`npm install --save react-router react-router-dom`}</HCodeBlock>\r\n          <h2>Using other components</h2>\r\n          <p>\r\n            Because the <Code>NavItem</Code> component is rendered as a{\" \"}\r\n            <Code>div</Code> element, it is possible to use just about any other\r\n            valid HTML element or React component in place of{\" \"}\r\n            <Code>NavLink</Code>.\r\n          </p>\r\n\r\n          <Nav justify=\"evenly\" centerLinks>\r\n            <Nav.Link to=\"#\">NavLink</Nav.Link>\r\n            <Nav.Item>\r\n              <Button>Button</Button>\r\n            </Nav.Item>\r\n            <Nav.Item all={6}>\r\n              <Checkbox rounded defaultChecked size=\"lg\"></Checkbox>\r\n            </Nav.Item>\r\n          </Nav>\r\n\r\n          <HCodeBlock language=\"html\">\r\n            {`<Nav justify=\"evenly\" centerLinks>\\n` +\r\n              ` <Nav.Link to=\"#\">NavLink</Nav.Link>\\n` +\r\n              ` <Nav.Item>\\n` +\r\n              `   <Button>Button</Button>\\n` +\r\n              ` </Nav.Item>\\n` +\r\n              ` <Nav.Item all={6}>\\n` +\r\n              `   <Checkbox rounded defaultChecked size=\"lg\"></Checkbox>\\n` +\r\n              ` </Nav.Item>\\n` +\r\n              `</Nav>`}\r\n          </HCodeBlock>\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\nexport default NavDetails;\r\n","import React from \"react\";\r\nimport { Code, ThoriumConsumer } from \"thorium-ui\";\r\nimport { HCodeBlock, PageBody } from \"components\";\r\n\r\nexport const StylesDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const s = context.customStyles;\r\n        return (\r\n          <PageBody>\r\n            <h1 style={s.h1}>Custom Styling</h1>\r\n            <p style={s.subheading}>\r\n              Thorium-UI is designed at its core to operate completely\r\n              independent of style sheets. While traditional CSS can still be\r\n              used in the standard fashion to style elements and components,\r\n              Thorium-UI offers a pure Javascript way to define and control\r\n              styling.\r\n            </p>\r\n            <h2 style={s.h2}>Programatic Styling</h2>\r\n            <p>\r\n              Traditionally, the <Code>class</Code> attribute (or the{\" \"}\r\n              <Code>classname</Code> prop in React) is used to identify elements\r\n              which share the same styling properties. Throium-UI uses a very\r\n              similar concept, however all styling is stored in JSON objects and\r\n              programatically inserted inline during the render process. Any\r\n              custom styling that is to be used is defined within a{\" \"}\r\n              <Code>customStyles.js</Code> file in the <Code>/src</Code>{\" \"}\r\n              directory.\r\n            </p>\r\n            <p style={s.h2}>Functional customStyles</p>\r\n            <p>\r\n              Functional <Code>customStyles</Code> is the most flexible way to\r\n              go about defining custom \"classes\", as it allows your styling to\r\n              change dynamically with the rest of the application.\r\n            </p>\r\n            <p>\r\n              To implement a functional customStyles object, begin by creating a{\" \"}\r\n              <Code>customStyles.js</Code> file within the <Code>/src</Code>{\" \"}\r\n              directory of your project.\r\n            </p>\r\n            <p>\r\n              Next, export a function named customStyles (adding any parameters\r\n              you wish to style against), which returns an object containing the\r\n              React-formatted style definitions to be used (you can think of\r\n              these definitions as classes in CSS as they are implemented in a\r\n              very similar fashion).\r\n            </p>\r\n            <p>\r\n              In this example, we pass the function the current theme (derived\r\n              from the current state of the ThroiumRoot component), and from\r\n              that, we are able to access the color values for the theme\r\n              currently in use.\r\n            </p>\r\n            <HCodeBlock language=\"javascript\">\r\n              {`export const customStyles = (theme) => {\\n` +\r\n                `   return ({\\n` +\r\n                `       h1: { textDecoration: \"underline\" },\\n` +\r\n                `       h2: { color: theme.colors.secondary },\\n` +\r\n                `   });\\n` +\r\n                `}`}\r\n            </HCodeBlock>\r\n            <p style={s.h2}>Static customStyles</p>\r\n            <p>\r\n              Static customStyles follow the same basic idea as their functional\r\n              counterparts, however without the ability to process external\r\n              variables. To use a static customStyles, follow the same\r\n              instructions as above, however instead of a function, simply\r\n              export and object containing the static definitions.\r\n            </p>\r\n            <HCodeBlock language=\"javascript\">\r\n              {`export const customStyles = {\\n` +\r\n                `   return ({\\n` +\r\n                `       h1: { textDecoration: \"underline\" },\\n` +\r\n                `       h2: { color: \"dodgerBlue\" },\\n` +\r\n                `   });\\n` +\r\n                `}`}\r\n            </HCodeBlock>\r\n            <p style={s.h2}>Using custom styles</p>\r\n            <p>\r\n              Once the custom styling has been defined, you need to add these\r\n              styles to their corresponding components.\r\n            </p>\r\n            <p>\r\n              Begin by accessing the customStyles object contained within{\" \"}\r\n              <Code>ThoriumContext</Code>. From here, you can simply add the\r\n              \"class\" to the <Code>style</Code> prop of the component.\r\n            </p>\r\n            <HCodeBlock language=\"javascript\">\r\n              {`import React from \"react\";\\n` +\r\n                `import ThoriumContext from \"../thorium-ui/ThoriumContext\";\\n\\n` +\r\n                `const ExampleComponent = (props) => {\\n` +\r\n                `   const context = React.useContext(ThoriumContext);\\n` +\r\n                `   const s = context.customStyles;\\n` +\r\n                `   return (<div>\\n` +\r\n                `             <p style={s.h1}>Custom Styled p Tag</p>\\n` +\r\n                `          </div>)\\n` +\r\n                `}\\n` +\r\n                `export default ExampleComponent;`}\r\n            </HCodeBlock>\r\n            `\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\nexport default StylesDetails;\r\n","import React from \"react\";\r\nimport { Code, Link, ThoriumConsumer } from \"thorium-ui\";\r\nimport { HCodeBlock, SampleCodeDropdown, PageBody } from \"components\";\r\n\r\nexport const ThemeControlDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <p style={cs.h1}>Theme Control</p>\r\n            <span style={cs.subheading}>\r\n              Implementing theme-responsive applications is super easy by\r\n              default!\r\n            </span>\r\n            <p style={h2}>Default Theme</p>\r\n            <p>\r\n              <Code>ThoriumRoot</Code> is configured by default to render\r\n              components in the devices current OS theme mode (<Code>dark</Code>{\" \"}\r\n              or <Code>light</Code>), falling back to <Code>dark</Code> if this\r\n              preferrence does not exist.\r\n            </p>\r\n            <p>\r\n              To change the fallback theme, set the <Code>defaultTheme</Code>{\" \"}\r\n              prop to \"light\".\r\n            </p>\r\n            <p>\r\n              To force ThoriumRoot to render a specific theme, regardless of OS\r\n              preference, add the <Code>overrideSysTheme</Code> prop.\r\n            </p>\r\n            <HCodeBlock language=\"html\">\r\n              {`<ThoriumRoot defaultTheme=\"light\" overrideSysTheme>\\n` +\r\n                `   <Container>\\n` +\r\n                `     /* YOUR CODE HERE */\\n` +\r\n                `   </Container>\\n` +\r\n                `</ThoriumRoot>`}\r\n            </HCodeBlock>\r\n            <p style={h2}>Accessing the Theme</p>\r\n            <p>\r\n              To access the current theme's data within any component, you\r\n              simply need to access the built-in <Code>ThoriumContext</Code>{\" \"}\r\n              object via the React Context API.\r\n            </p>\r\n            <HCodeBlock langauge=\"javascript\">\r\n              {`import React from \"react\";\\n` +\r\n                `import { ThoriumContext } from \"thorium-ui\";\\n\\n` +\r\n                `const MyComponent = (props) => {\\n` +\r\n                `   const context = React.useContext(ThoriumContext);\\n` +\r\n                `   return (<div>{context.theme.name}</div>)\\n` +\r\n                `}\\n` +\r\n                `export default MyComponent`}\r\n            </HCodeBlock>\r\n            <p style={h2}>Toggling the Theme</p>\r\n            <p>\r\n              There are two basic ways to quickly switch between{\" \"}\r\n              <Code>dark</Code> and <Code>light</Code> themes.\r\n            </p>\r\n            <h3>ThemeToggle:</h3>\r\n            <p>\r\n              The easiest way to accomplish this is by implementing the{\" \"}\r\n              <Link to=\"/themeToggle\" asLink>\r\n                ThemeToggle\r\n              </Link>{\" \"}\r\n              component. This is a pre-styled{\" \"}\r\n              <Link to=\"/toggleSwitch\" asLink>\r\n                ToggleSwitch\r\n              </Link>{\" \"}\r\n              component designed specifically for this task.\r\n            </p>\r\n            <SampleCodeDropdown>\r\n              <HCodeBlock language=\"javascript\">\r\n                {`import React from \"react\";\\n` +\r\n                  `import { ThemeToggle } from \"thorium-ui\";\\n\\n` +\r\n                  `const MyComponent = (props) => {\\n` +\r\n                  `   return (<div>\\n` +\r\n                  `             <ThemeToggle />\\n` +\r\n                  `           </div>\\n` +\r\n                  `          )\\n` +\r\n                  `}\\n` +\r\n                  `export default MyComponent`}\r\n              </HCodeBlock>\r\n            </SampleCodeDropdown>\r\n            <h3>Custom Component</h3>\r\n            <p>\r\n              Alternately, the <Code>ThoriumContext.toggleTheme()</Code>{\" \"}\r\n              function can be called from within any other component. This can\r\n              be useful if would like to toggle the theme as a result of some\r\n              other external parameter.\r\n            </p>\r\n\r\n            <SampleCodeDropdown>\r\n              <HCodeBlock langauge=\"javascript\">\r\n                {`import React from \"react\";\\n` +\r\n                  `import { ThoriumContext } from \"thorium-ui\";\\n\\n` +\r\n                  `const MyToggleComponent = (props) => {\\n` +\r\n                  `   const context = React.useContext(ThoriumContext);\\n` +\r\n                  `   return <button onClick={context.toggleTheme()}>Click Me!</button>\\n` +\r\n                  `}\\n` +\r\n                  `export default MyToggleComponent`}\r\n              </HCodeBlock>\r\n            </SampleCodeDropdown>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\nexport default ThemeControlDetails;\r\n","import React from \"react\";\r\nimport { Code, ThoriumConsumer } from \"thorium-ui\";\r\nimport { HCodeBlock, PageBody } from \"components\";\r\n\r\nexport const CustomThemesDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <p style={cs.h1}>Custom Themes</p>\r\n            <p style={cs.subheading}>\r\n              While basic styling is provided, it is easy to customize the\r\n              themes any way you see fit. This can be done by creating a{\" \"}\r\n              <Code>customThemes.js</Code> file in the <Code>src</Code>{\" \"}\r\n              directory of your project.\r\n            </p>\r\n            <p style={h2}>The customThemes Object</p>\r\n            <p>\r\n              In the customThemes.js file, export an object named customThemes\r\n              containing the changes you wish to make. Any component that uses\r\n              different styles between themes can be modified here. This is also\r\n              where the default color palette can be changed.\r\n            </p>\r\n            <HCodeBlock language=\"javascript\">\r\n              {`export const customThemes = {\\n` +\r\n                `   dark: {\\n` +\r\n                `       body: { \"background-color\": \"purple\" }\\n` +\r\n                `       colors: { primary: \"yellow\" }\\n` +\r\n                `       }\\n` +\r\n                `   light: {\\n` +\r\n                `       body: { \"background-color\": \"orange\" }\\n` +\r\n                `       colors: { primary: \"pink\" }\\n` +\r\n                `       }\\n` +\r\n                `   };`}\r\n            </HCodeBlock>\r\n            <span\r\n              style={{ ...cs.subheading, color: context.theme.colors.danger }}\r\n            >\r\n              Note:{\" \"}\r\n            </span>\r\n\r\n            <p>\r\n              Because <Code>body</Code> styling is set explicitely outside of\r\n              the <Code>ThoriumRoot</Code> component and not parsed by React,\r\n              any respective parameters must be written in CSS string key\r\n              format, not standard JSX.\r\n            </p>\r\n            <HCodeBlock language=\"javascipt\" disableCopy>\r\n              {`{ body: { backgroundColor: \"purple\"} } //incorrect\\n\\n` +\r\n                `{ body: { \"background-color\": \"purple\"} } //correct`}\r\n            </HCodeBlock>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\nexport default CustomThemesDetails;\r\n","import React from \"react\";\r\nimport { Layer, Block, ToggleSwitch } from \"thorium-ui\";\r\n\r\nexport class test extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layer justify=\"center\">\r\n        <Block all={6}>\r\n          <ToggleSwitch variant=\"success\" />\r\n        </Block>\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\nexport default test;\r\n","import { ButtonDetails } from \"./components/button\";\r\nimport { CodeBlockDetails } from \"./components/codeBlock\";\r\nimport { DropdownDetails } from \"./components/dropdown\";\r\nimport { FormDetails } from \"./components/form\";\r\nimport { GettingStartedDetails } from \"./general/gettingStarted\";\r\nimport { PictureDetails } from \"./components/picture\";\r\nimport { InputDetails } from \"./components/input\";\r\nimport { LayoutDetails } from \"./general/layout\";\r\nimport { NavDetails } from \"./components/nav\";\r\nimport { StylesDetails } from \"./general/styles\";\r\nimport { ThemeControlDetails } from \"./general/themeControl\";\r\nimport { CustomThemesDetails } from \"./general/themeCustomization\";\r\nimport { test } from \"./test\";\r\n\r\nexport const generalLinks = [\r\n  { text: \"Getting Started\", route: \"/\" },\r\n  { text: \"Theme Control\", route: \"/theme-control\" },\r\n  { text: \"Custom Themes\", route: \"/theme-customization\" },\r\n  { text: \"Layout\", route: \"/layout\" },\r\n  { text: \"Color Palette\", route: \"/palette\" },\r\n  { text: \"Custom Styling\", route: \"/styles\" },\r\n];\r\n\r\nexport const componentLinks = [\r\n  { text: \"BurgerButton\", route: \"/burgerbutton\" },\r\n  { text: \"Button\", route: \"/button\" },\r\n  { text: \"Code\", route: \"/code\" },\r\n  { text: \"CodeBlock\", route: \"/codeblock\" },\r\n  { text: \"Dropdown\", route: \"/dropdown\" },\r\n  { text: \"Form\", route: \"/form\" },\r\n  { text: \"Icon\", route: \"/icon\" },\r\n  { text: \"Picture\", route: \"/picture\" },\r\n  { text: \"Input\", route: \"/input\" },\r\n  { text: \"Nav\", route: \"/nav\" },\r\n  { text: \"ToggleSwitch\", route: \"/toggleSwitch\" },\r\n  { text: \"Table\", route: \"/table\" },\r\n  { text: \"Footer\", route: \"/footer\" },\r\n];\r\n\r\nexport default {\r\n  ButtonDetails,\r\n  CodeBlockDetails,\r\n  DropdownDetails,\r\n  FormDetails,\r\n  GettingStartedDetails,\r\n  PictureDetails,\r\n  InputDetails,\r\n  LayoutDetails,\r\n  NavDetails,\r\n  StylesDetails,\r\n  ThemeControlDetails,\r\n  CustomThemesDetails,\r\n  test,\r\n};\r\n","import React from \"react\";\r\nimport { Dropdown, Block, Nav } from \"thorium-ui\";\r\nimport { generalLinks, componentLinks } from \"pages\";\r\n\r\nexport const MobileMenu = React.forwardRef((props, ref) => {\r\n  const mapToLinks = (arr) => {\r\n    return arr.map(({ text, route }, key) => (\r\n      <Nav.Link to={route} key={key} navkey={route}>\r\n        {text}\r\n      </Nav.Link>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Block all={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n      <Dropdown\r\n        scrollable\r\n        height=\"calc(100vh - 75px)\"\r\n        triggerType=\"click\"\r\n        remoteTrigger\r\n        targetID=\"mobileMenu\"\r\n        triggerID=\"mobileMenuBtn\"\r\n        ref={ref}\r\n        toggleBurger={props.toggleBurger}\r\n        collapseOnClick\r\n        style={{ paddingBottom: \"3rem\" }}\r\n      >\r\n        <Nav\r\n          vertical\r\n          trackActive\r\n          activeByURL\r\n          defaultActive={window.location.pathname}\r\n          centerLinks\r\n          variant=\"primary\"\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Dropdown.Divider label=\"Basics\" />\r\n          {mapToLinks(generalLinks)}\r\n          <Dropdown.Divider label=\"Components\" />\r\n          {mapToLinks(componentLinks)}\r\n        </Nav>\r\n      </Dropdown>\r\n    </Block>\r\n  );\r\n});\r\n\r\nexport default MobileMenu;\r\n","// React\r\nimport React, { useEffect, useContext } from \"react\";\r\n// Thorium components\r\nimport { Block, Layer, ThoriumContext } from \"thorium-ui\";\r\n\r\n// Custom components\r\nimport { SideMenu, PageFooter } from \"components\";\r\n// Custom scrollbar styling\r\nimport \"scollbar/scrollbar.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const PageBody = (props) => {\r\n  const context = useContext(ThoriumContext);\r\n  let pageBody;\r\n  const history = useHistory();\r\n  let VpSizeName = context.viewportSizeName;\r\n  const style = context.customStyles.pageBody;\r\n\r\n  useEffect(() => {\r\n    // pageBody.scrollTo(0, 0);\r\n  }, [history.location, pageBody]);\r\n  useEffect(() => {\r\n    const name = context.theme.name;\r\n    const hlDark = document.getElementById(\"hl-dark\");\r\n    const hlLight = document.getElementById(\"hl-light\");\r\n    if (name === \"dark\") {\r\n      hlDark.disabled = false;\r\n      hlLight.disabled = true;\r\n    } else if (name === \"light\") {\r\n      hlDark.disabled = true;\r\n      hlLight.disabled = false;\r\n    }\r\n  }, [context.theme.name]);\r\n  return (\r\n    <Layer ref={(el) => (pageBody = el)} style={style}>\r\n      {[\"xs\", \"sm\"].includes(VpSizeName) && (\r\n        <Block all={12}>\r\n          {props.children}\r\n          <hr style={{ marginTop: \"4rem\" }} />\r\n          <PageFooter />\r\n        </Block>\r\n      )}\r\n      {![\"xs\", \"sm\"].includes(VpSizeName) && (\r\n        <>\r\n          <SideMenu />\r\n          <Block md={8} lg={8} xl={7} style={{ marginLeft: \"25%\" }}>\r\n            {props.children}\r\n            <hr style={{ marginTop: \"4rem\" }} />\r\n            <PageFooter />\r\n          </Block>\r\n        </>\r\n      )}\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default PageBody;\r\n","import React from \"react\";\r\nimport { Footer, Block, Link, ThoriumConsumer } from \"thorium-ui\";\r\n\r\nexport const PageFooter = (props) => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      return (\r\n        <Footer\r\n          {...props}\r\n          justify=\"center\"\r\n          style={{ paddingBottom: \"3rem\", textAlign: \"center\" }}\r\n        >\r\n          <Block all={12} style={{ marginBottom: \"1rem\" }}>\r\n            <h2>More Information</h2>\r\n            <Link\r\n              href=\"https://github.com/J-Puls/thorium-ui\"\r\n              asAnchor\r\n              target=\"_blank\"\r\n              title=\"GitHub Repository\"\r\n            >\r\n              &nbsp;Official GitHub Repository\r\n            </Link>\r\n          </Block>\r\n          <Block all={12}>\r\n            <span>\r\n              <span style={cs.subheading}>Developed by: </span>{\" \"}\r\n              <Link\r\n                target=\"_blank\"\r\n                asAnchor\r\n                href=\"https://jpuls.dev\"\r\n                title=\"Developer Portfolio\"\r\n                style={{ boxShadow: `0 2px 0 0 blue` }}\r\n              >\r\n                Jeffrey Puls\r\n              </Link>\r\n            </span>\r\n          </Block>\r\n        </Footer>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default PageFooter;\r\n","import React from \"react\";\r\nimport { Nav, ThoriumConsumer } from \"thorium-ui\";\r\nimport { generalLinks, componentLinks } from \"pages\";\r\n\r\nconst mapToLinks = (arr) => {\r\n  return arr.map(({ text, route }, key) => (\r\n    <Nav.Link to={route} key={key} navkey={route}>\r\n      <span style={{ paddingLeft: \"1rem\" }}>{text}</span>\r\n    </Nav.Link>\r\n  ));\r\n};\r\n\r\nexport const SideMenu = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const sideMenu = { ...cs.sideMenu, ...context.theme.sideMenu };\r\n      return (\r\n        <Nav\r\n          md={2}\r\n          lg={2}\r\n          xl={1}\r\n          style={sideMenu}\r\n          vertical\r\n          trackActive\r\n          activeByURL\r\n          defaultActive={window.location.pathname}\r\n          variant=\"primary\"\r\n        >\r\n          <h3 style={cs.navh3} key={\"Basics\"}>\r\n            Basics\r\n          </h3>\r\n          {mapToLinks(generalLinks)}\r\n\r\n          <h3 style={cs.navh3} key={\"Components\"}>\r\n            Components\r\n          </h3>\r\n          {mapToLinks(componentLinks)}\r\n        </Nav>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default SideMenu;\r\n","import React, { useContext } from \"react\";\r\nimport { MobileMenu } from \"./mobileMenu\";\r\nimport logos from \"assets/logos.svg\";\r\nimport {\r\n  Block,\r\n  BurgerButton,\r\n  Icon,\r\n  Layer,\r\n  ThemeToggle,\r\n  useTheme,\r\n  useViewportSizeName,\r\n  ThoriumContext,\r\n} from \"thorium-ui\";\r\n\r\nexport const TopNav = () => {\r\n  const cs = useContext(ThoriumContext).customStyles;\r\n  let burger;\r\n  const theme = useTheme();\r\n  const viewportSizeName = useViewportSizeName();\r\n  const logoFill = theme.name === \"dark\" ? \"#ffffff\" : \"#000000\";\r\n  return (\r\n    <>\r\n      <Layer\r\n        sticky\r\n        // translucent\r\n        style={{\r\n          ...cs.topNav,\r\n          ...theme.topNav,\r\n        }}\r\n      >\r\n        <Block all={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n          <Layer justify=\"between\">\r\n            <Block style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n              <a href=\"/\" rel=\"noopener noreferrer\" title=\"Home\">\r\n                <Icon\r\n                  width={130}\r\n                  height={30}\r\n                  src={`${logos}#thorium-logo-full`}\r\n                  fill={logoFill}\r\n                />\r\n              </a>\r\n            </Block>\r\n\r\n            <Block justify=\"end\" style={{ paddingRight: 0 }}>\r\n              <ThemeToggle\r\n                size=\"lg\"\r\n                offState=\"dark\"\r\n                style={{\r\n                  marginRight: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n                label={\r\n                  [\"md\", \"lg\", \"xl\"].includes(viewportSizeName) && (\r\n                    <em>{theme.name}</em>\r\n                  )\r\n                }\r\n              />\r\n\r\n              {![\"xs\", \"sm\"].includes(viewportSizeName) && (\r\n                <a\r\n                  href=\"https://github.com/J-Puls/thorium-UI\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                  title=\"GitHub\"\r\n                >\r\n                  <Icon\r\n                    width={30}\r\n                    height={30}\r\n                    src={`${logos}#gitLogo`}\r\n                    fill={logoFill}\r\n                  />\r\n                </a>\r\n              )}\r\n              {[\"xs\", \"sm\"].includes(viewportSizeName) && (\r\n                <BurgerButton\r\n                  aria-label=\"mobile-menu-trigger\"\r\n                  targetID=\"mobileMenu\"\r\n                  id=\"mobileMenuBtn\"\r\n                  variant=\"link\"\r\n                  overrideFill\r\n                  iconFill={theme.colors.neutral.w4}\r\n                  ref={(el) => (burger = el)}\r\n                />\r\n              )}\r\n            </Block>\r\n          </Layer>\r\n        </Block>\r\n      </Layer>\r\n      {[\"xs\", \"sm\"].includes(viewportSizeName) && (\r\n        <MobileMenu toggleBurger={() => burger.toggle()} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React from \"react\";\r\nimport { BurgerButton, Code, Link, Layer, ThoriumConsumer } from \"thorium-ui\";\r\nimport {\r\n  BurgerButtonExample,\r\n  HCodeBlock,\r\n  SampleCodeDropdown,\r\n  PageBody,\r\n} from \"components\";\r\n\r\nexport const BurgerButtonDetails = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      return (\r\n        <PageBody>\r\n          <p style={cs.h1}>BurgerButton</p>\r\n          <div style={cs.subheading}>\r\n            A <Code>BurgerButton</Code> is a pre-styled button to be used as the\r\n            trigger for a mobile{\" \"}\r\n            <Link to=\"/dropdown\" asLink>\r\n              Dropdown\r\n            </Link>{\" \"}\r\n            menu.\r\n          </div>\r\n          <p>\r\n            Click the <Code>BurgerButton</Code> below to see is functionality in\r\n            action. Notice how the icon reacts to the visibility state of the\r\n            connected menu.\r\n          </p>\r\n          <BurgerButtonExample />\r\n          <p style={h2}>Triggering</p>\r\n          <p>\r\n            Connecting the <Code>BurgerButton</Code> to its respective{\" \"}\r\n            <Code>Dropdown</Code> can be done by following a few simple steps:\r\n          </p>\r\n          <ol>\r\n            <li>\r\n              Pass the <Code>remoteTrigger</Code> prop to the{\" \"}\r\n              <Code>Dropdown</Code>\r\n            </li>\r\n            <li>Supply a unique id to each component respectively</li>\r\n            <li>\r\n              Pass the <Code>Dropdown</Code> id to the <Code>BurgerButton</Code>{\" \"}\r\n              as <Code>targetID</Code>\r\n            </li>\r\n            <li>\r\n              Pass the <Code>BurgerButton</Code> id to the <Code>Dropdown</Code>{\" \"}\r\n              as <Code>triggerID</Code>\r\n            </li>\r\n          </ol>\r\n          <p>\r\n            With this set properly, the two components can now interact with one\r\n            another, even if they are in completely separate parts of the page,\r\n            or embedded in other components.\r\n          </p>\r\n          <SampleCodeDropdown>\r\n            <HCodeBlock language=\"html\">\r\n              {`<Layer justify=\"center\">\\n` +\r\n                ` <Block xs={12} sm={12} md={10} lg={10} xl={10} justify=\"end\">\\n` +\r\n                `  <BurgerButton variant=\"dark\" targetID=\"burger-example-menu\" id=\"burger-example-button\"/>\\n` +\r\n                ` </Block>\\n` +\r\n                ` <Block xs={12} sm={12} md={8} lg={8} xl={8}>\\n` +\r\n                `  <Dropdown remoteTrigger triggerID=\"burger-example-button\" id=\"burger-example-menu\">\\n` +\r\n                `   <Dropdown.Link to=\"#\">Example Link</Dropdown.Link>\\n` +\r\n                `   <Dropdown.Link to=\"#\">Example Link</Dropdown.Link>\\n` +\r\n                `  </Dropdown>\\n` +\r\n                ` </Block>\\n` +\r\n                `</Layer>`}\r\n            </HCodeBlock>\r\n          </SampleCodeDropdown>\r\n\r\n          <p style={h2}>Styling</p>\r\n          <div>\r\n            As it is little more than a specialized{\" \"}\r\n            <Link to=\"/button\" asLink>\r\n              Button\r\n            </Link>{\" \"}\r\n            component, the same <Code>variant</Code> values are valid for\r\n            styling.\r\n          </div>\r\n          <Layer justify=\"evenly\" style={{paddingTop: \"1em\"}}>\r\n            <BurgerButton variant=\"primary\" />\r\n            <BurgerButton variant=\"secondary\" />\r\n            <BurgerButton variant=\"success\" />\r\n            <BurgerButton variant=\"warning\" />\r\n            <BurgerButton variant=\"danger\" />\r\n            <BurgerButton variant=\"light\" />\r\n            <BurgerButton variant=\"dark\" />\r\n            <BurgerButton variant=\"link\" />\r\n          </Layer>\r\n          <p style={h2}>Icon Color</p>\r\n          <p>\r\n            By default, the <Code>BurgerButton</Code> icons will be styled in\r\n            accordance to the respective button variant. However, if custom icon\r\n            coloring is desired, this can be overridden by passing a valid color\r\n            string to the <Code>iconFill</Code> prop.\r\n          </p>\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default BurgerButtonDetails;\r\n","import React from \"react\";\r\nimport { Code, Layer, Block, ThoriumConsumer } from \"thorium-ui\";\r\nimport { PageBody } from \"components\";\r\n\r\nexport const CodeDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <p style={cs.h1}>Code</p>\r\n            <p style={cs.subheading}>\r\n              A pre-styled {`&`} themed wrapper used to highlight keywords\r\n              within text.\r\n            </p>\r\n            <p style={h2}>Example</p>\r\n            <p>\r\n              Observe the following text examples, the first using plain text,\r\n              the second using <Code>Code</Code> wrappers to highlight important\r\n              keywords.\r\n            </p>\r\n            <Layer justify=\"evenly\">\r\n              <Block xs={12} sm={12} md={5} lg={5} xl={5} style={cs.diagram.b}>\r\n                <p>\r\n                  In Javascript, it is possible to convert the contents of a\r\n                  String to all lowercase characters. To accomplish this, call\r\n                  the toLower() function on the desired String.\r\n                </p>\r\n              </Block>\r\n              <Block xs={12} sm={12} md={5} lg={5} xl={5} style={cs.diagram.c}>\r\n                <p>\r\n                  In Javascript, it is possible to convert the contents of a{\" \"}\r\n                  <Code>String</Code> to all lowercase characters. To accomplish\r\n                  this, call the <Code>toLower()</Code> function on the desired{\" \"}\r\n                  <Code>String</Code>.\r\n                </p>\r\n              </Block>\r\n            </Layer>\r\n            <p>\r\n              Highlighting important keywords within the block of text can be an\r\n              effective means of drawing attention to the important bits of\r\n              information within.\r\n            </p>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\n\r\nexport default CodeDetails;\r\n","import React from \"react\";\r\nimport { Code, Layer, Block, Link, ThoriumConsumer } from \"thorium-ui\";\r\nimport {\r\n  PageBody,\r\n  HCodeBlock,\r\n  SampleCodeDropdown,\r\n  IconExample,\r\n} from \"components\";\r\n\r\nexport const IconDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        return (\r\n          <PageBody>\r\n            <p style={cs.h1}>Icon</p>\r\n            <p style={cs.subheading}>\r\n              The <Code>Icon</Code> component provides a quick and easy way to\r\n              incorporate dynamic <Code>SVG</Code> based icons anywhere in your\r\n              application.\r\n            </p>\r\n            <p style={h2}>Sprite Sheet</p>\r\n            <p>\r\n              In order for Icons to work properly, it is highly recommended to\r\n              use an <Code>SVG sprite sheet</Code> formatted like the example\r\n              below.{\" \"}\r\n              <Link\r\n                href=\"https://w3bits.com/svg-sprites/\"\r\n                asAnchor\r\n                target=\"_blank\"\r\n              >\r\n                Learn more about this topic here.\r\n              </Link>\r\n            </p>\r\n            <Layer>\r\n              <Block all={12}>\r\n                <HCodeBlock language=\"xml\">\r\n                  {`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n` +\r\n                    `   <!-- Chevron Up -->\\n` +\r\n                    `   <symbol id=\"chevron-up\" viewBox=\"0 0 24 24\">\\n` +\r\n                    `       <path d=\"M0 16.67l2.829 2.83 9.175-9.339 9.167 9.339 2.829-2.83-11.996-12.17z\"/>\\n` +\r\n                    `   </symbol>\\n` +\r\n                    `   <!-- Chevron Down -->\\n` +\r\n                    `   <symbol id=\"chevron-down\" viewBox=\"0 0 24 24\">\\n` +\r\n                    `       <path d=\"M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z\"/>\\n` +\r\n                    `   </symbol>\\n` +\r\n                    `</svg>`}\r\n                </HCodeBlock>\r\n              </Block>\r\n            </Layer>\r\n            <p style={h2}>Usage</p>\r\n            <p style={cs.subheading}>\r\n              With the sprites defined in a sprite sheet, using them as an{\" \"}\r\n              <Code>Icon</Code> is very simple.\r\n            </p>\r\n            <ol>\r\n              <li>Import the sprite sheet into your component</li>\r\n              <li>\r\n                Provide the desired sprite's <Code>fragment identifier</Code> as\r\n                the <Code>src</Code> prop\r\n              </li>\r\n              <li>Specify a width and height</li>\r\n              <li>Specify a fill color</li>\r\n            </ol>\r\n            <p style={h2}>Example</p>\r\n\r\n            <IconExample />\r\n            <SampleCodeDropdown>\r\n              <HCodeBlock language=\"html\">\r\n                {`<Layer justify=\"center\">\\n` +\r\n                  `     <Block all={6} justify=\"around\">\\n` +\r\n                  `         <Button variant=\"dark\">\\n` +\r\n                  `             <Icon src={\\`\\${Icons}#chevron-up\\`} width={24} height={24} fill=\"dodgerblue\"/>\\n` +\r\n                  `         </Button>\\n` +\r\n                  `         <Button variant=\"dark\">\\n` +\r\n                  `             <Icon src={\\`\\${Icons}#chevron-down\\`} width={24} height={24} fill=\"dodgerblue\"/>\\n` +\r\n                  `         </Button>\\n` +\r\n                  `     </Block>\\n` +\r\n                  `</Layer>`}\r\n              </HCodeBlock>\r\n            </SampleCodeDropdown>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\n\r\nexport default IconDetails;\r\n","import { BurgerButtonDetails } from \"./burgerbutton\";\r\nimport { ButtonDetails } from \"./button\";\r\nimport { CodeBlockDetails } from \"./codeBlock\";\r\nimport { CodeDetails } from \"./code\";\r\nimport { DropdownDetails } from \"./dropdown\";\r\nimport { FormDetails } from \"./form\";\r\nimport { IconDetails } from \"./icon\";\r\nimport { PictureDetails } from \"./picture\";\r\nimport { InputDetails } from \"./input\";\r\nimport { NavDetails } from \"./nav\";\r\n\r\nexport default {\r\n  burgerButton: BurgerButtonDetails,\r\n  button: ButtonDetails,\r\n  code: CodeDetails,\r\n  codeBlock: CodeBlockDetails,\r\n  dropdown: DropdownDetails,\r\n  form: FormDetails,\r\n  icon: IconDetails,\r\n  picture: PictureDetails,\r\n  input: InputDetails,\r\n  nav: NavDetails,\r\n};\r\n","import React from \"react\";\r\nimport { Layer, Block, Code, ThoriumConsumer } from \"thorium-ui\";\r\nimport { PageBody } from \"components\";\r\nexport const PaletteDetails = () => {\r\n  return (\r\n    <ThoriumConsumer>\r\n      {(context) => {\r\n        const cs = context.customStyles;\r\n        const h2 = { ...cs.h2, ...context.theme.h2 };\r\n        const themeColors = [];\r\n        const neutralColors = [];\r\n        for (let key in context.theme.colors) {\r\n          themeColors.push({ name: key, value: context.theme.colors[key] });\r\n        }\r\n        for (let key in context.colors.neutral) {\r\n          neutralColors.push({ name: key, value: context.colors.neutral[key] });\r\n        }\r\n\r\n        return (\r\n          <PageBody>\r\n            <h1>Color Palette</h1>\r\n            <p style={cs.subheading}>\r\n              By default, Thorium-UI contains three main color palettes:{\" \"}\r\n              <Code>dark</Code> and <Code>light</Code> which coincide with their\r\n              respective themes, and <Code>neutral</Code> which is universal\r\n              between themes. Any of these colors can be overridden within the{\" \"}\r\n              <Code>customThemes.js</Code> file.\r\n              <br />\r\n              <br />\r\n              Try toggling theme modes and note how it affects the color\r\n              palettes below.\r\n            </p>\r\n\r\n            <Layer>\r\n              <Block all={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                <h2 style={h2}>Themed Colors: {`${context.theme.name}`}</h2>\r\n              </Block>\r\n\r\n              {themeColors.map(\r\n                ({ name, value }) =>\r\n                  name !== \"code\" && (\r\n                    <Block xs={6} sm={4} md={4} lg={4} xl={3} key={name}>\r\n                      <h4>\r\n                        {name}\r\n                        <br />\r\n                        {value}\r\n                      </h4>\r\n                      <Block\r\n                        all={12}\r\n                        justify=\"center\"\r\n                        rounded\r\n                        style={{ height: 50, backgroundColor: value }}\r\n                      ></Block>\r\n                    </Block>\r\n                  )\r\n              )}\r\n              <Block all={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                <h2 style={h2}>Neutral Colors</h2>\r\n              </Block>\r\n              {neutralColors.map(({ name, value }) => (\r\n                <Block xs={6} sm={4} md={4} lg={4} xl={3} key={name}>\r\n                  <h4>\r\n                    {name}\r\n                    <br />\r\n                    {value}\r\n                  </h4>\r\n                  <Block\r\n                    all={12}\r\n                    justify=\"center\"\r\n                    rounded\r\n                    style={{ height: 50, backgroundColor: value }}\r\n                  ></Block>\r\n                </Block>\r\n              ))}\r\n            </Layer>\r\n          </PageBody>\r\n        );\r\n      }}\r\n    </ThoriumConsumer>\r\n  );\r\n};\r\nexport default PaletteDetails;\r\n","import { LayoutDetails } from \"./layout\";\r\nimport { StylesDetails } from \"./styles\";\r\nimport { ThemeControlDetails } from \"./themeControl\";\r\nimport { CustomThemesDetails } from \"./themeCustomization\";\r\nimport { GettingStartedDetails } from \"./gettingStarted\";\r\nimport { PaletteDetails } from \"./palette\";\r\n\r\nexport default {\r\n  \"\": GettingStartedDetails,\r\n  layout: LayoutDetails,\r\n  styles: StylesDetails,\r\n  \"theme-control\": ThemeControlDetails,\r\n  \"theme-customization\": CustomThemesDetails,\r\n  palette: PaletteDetails,\r\n};\r\n","import React from \"react\";\r\nimport { Layer, Block, Button, ThoriumConsumer } from \"thorium-ui\";\r\nimport { PageBody } from \"components\";\r\n\r\nconst Error404 = () => (\r\n  <ThoriumConsumer>\r\n    {(context) => {\r\n      const cs = context.customStyles;\r\n      const h2 = { ...cs.h2, ...context.theme.h2 };\r\n      return (\r\n        <PageBody>\r\n          <Layer justify=\"center\" style={{ minHeight: \"75vh\" }}>\r\n            <Block vertical all={10} style={{ textAlign: \"center\" }}>\r\n              <p style={{ ...cs.h1, color: context.theme.colors.danger }}>\r\n                404 Error!\r\n              </p>\r\n              <p style={h2}>Hmm... Looks like that page doesn't exist.</p>\r\n              <br />\r\n              <Button variant=\"dark\" onClick={() => window.history.back()}>\r\n                Previous Page\r\n              </Button>\r\n            </Block>\r\n          </Layer>\r\n        </PageBody>\r\n      );\r\n    }}\r\n  </ThoriumConsumer>\r\n);\r\n\r\nexport default Error404;\r\n","// Custom style definition. Can be functional or static\r\n\r\nexport const customStyles = (theme, colors) => {\r\n  return {\r\n    body: {\r\n      overflow: \"hidden\",\r\n      \"font-size\": \"16px\",\r\n      \"font-family\": \"'Open Sans', 'Roboto', 'Monsterrat', 'Arial', sans-sarif\",\r\n    },\r\n    topNav: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n      color: colors.neutral.w4,\r\n      boxShadow: \"0px 2px 3px #000000aa\",\r\n      paddingTop: \".5rem\",\r\n      paddingBottom: \".5rem\",\r\n      height: \"75px\",\r\n      maxHeight: \"50px\",\r\n    },\r\n    h1: {\r\n      fontSize: \"3.3rem\",\r\n      fontFamily: \"'Nunito', sans-serif\",\r\n      fontWeight: 700,\r\n      marginBottom: \".75rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"1.75rem\",\r\n      fontWeight: 700,\r\n      marginBottom: \".25rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.3rem\",\r\n      fontWeight: 500,\r\n      marginBottom: \".25rem\",\r\n    },\r\n\r\n    mb10: {\r\n      marginBottom: 10,\r\n    },\r\n    mx0: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n    },\r\n    navh3: {\r\n      color: theme.colors.primary,\r\n      marginBottom: 0,\r\n      marginTop: \"1rem\",\r\n      paddingLeft: \"1rem\",\r\n    },\r\n    pageBody: {\r\n      overflowY: \"auto\",\r\n      height: \"95vh\",\r\n      margin: 0,\r\n    },\r\n    pb2: {\r\n      border: `2px solid ${theme.colors.secondary}`,\r\n    },\r\n    px0: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n    },\r\n    p10: {\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 10,\r\n      paddingBottom: 10,\r\n    },\r\n    sideMenu: {\r\n      height: \"100vh\",\r\n      left: 0,\r\n      marginLeft: 0,\r\n      overflowY: \"auto\",\r\n      paddingBottom: \"5rem\",\r\n      paddingTop: \"2rem\",\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      position: \"fixed\",\r\n    },\r\n    subheading: {\r\n      fontSize: \"1.3rem\",\r\n      fontWeight: 100,\r\n    },\r\n    mtp5: {\r\n      marginTop: \".5rem\",\r\n    },\r\n    diagram: {\r\n      a: {\r\n        border: `2px solid ${theme.colors.secondary}`,\r\n        fontWeight: 700,\r\n        marginTop: \"1rem\",\r\n      },\r\n      b: {\r\n        border: `2px solid ${theme.colors.primary}`,\r\n        marginBottom: \".5rem\",\r\n      },\r\n      c: {\r\n        border: `2px solid ${theme.colors.success}`,\r\n        marginBottom: \".5rem\",\r\n      },\r\n    },\r\n  };\r\n};\r\nexport default customStyles;\r\n","import { colors, Themes } from \"thorium-ui\";\r\n\r\nconst customThemes = { ...Themes };\r\n\r\nconst customLight = {\r\n  topNav: { backgroundColor: colors.light.primaryHover },\r\n  footer: { backgroundColor: colors.neutral.w2 },\r\n  sideMenu: {\r\n    backgroundColor: colors.neutral.w4,\r\n    boxShadow: `2px 0px 0px 0px ${colors.light.primaryHover}`,\r\n  },\r\n  h2: { color: colors.neutral.b3 },\r\n  iconFill: colors.neutral.b0,\r\n};\r\n\r\nconst customDark = {\r\n  topNav: { backgroundColor: colors.neutral.b3 },\r\n  footer: { backgroundColor: colors.neutral.b5 },\r\n  sideMenu: {\r\n    backgroundColor: colors.neutral.b3,\r\n    boxShadow: \"2px 0px 2px 0px #000000aa\",\r\n  },\r\n  h2: { color: colors.neutral.w2 },\r\n  iconFill: colors.neutral.w4,\r\n};\r\n\r\ncustomThemes.dark = { ...customThemes.dark, ...customDark };\r\ncustomThemes.light = { ...customThemes.light, ...customLight };\r\n\r\nexport default customThemes;\r\n","/* React */\nimport React from \"react\";\n/* react-router */\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n/* Thorium-UI */\nimport { ThoriumRoot } from \"thorium-ui\";\n/* Custom components */\nimport { TopNav } from \"components\";\n\n/* Page content components */\nimport components from \"pages/components\";\nimport general from \"pages/general\";\nimport Error404 from \"pages/errors/404\";\nimport test from \"pages/test\";\nimport customStyles from \"./customStyles\";\nimport customThemes from \"./customThemes\";\n\nexport const App = () => {\n  // Defines object containing all page content components\n  const pages = { ...general, ...components };\n\n  // Create an array to hold all possible routes\n  const routes = [];\n  for (let key in pages) {\n    routes.push({ path: `/${key}`, component: pages[key] });\n  }\n\n  // Map each route to a react-router Route\n  const renderedRoutes = routes.map(({ path, component }, key) => (\n    <Route exact path={path} component={component} key={key} />\n  ));\n\n  return (\n    <ThoriumRoot\n      overrideSysTheme\n      defaultTheme=\"dark\"\n      enableReactRouter\n      customStyles={customStyles}\n      customTheme={customThemes}\n    >\n      <Router>\n        <TopNav />\n        <Switch>\n          {renderedRoutes}\n          <Route path=\"/test\" exact component={test} />\n          <Route component={Error404} />\n        </Switch>\n      </Router>\n    </ThoriumRoot>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}